@import './reset.scss';
@import './type.scss';
@import './size.scss';
@import './variables.scss';

$components: button, input, select, message, list;

//map-get根据 $key 参数，返回 $key 在 $map 中对应的 value 值  $type是一个map
@function typed($type, $key) {
    @return map-get($type, $key);
}

// #{}=模板字符串
@mixin kl-attribute($typeName, $attrKey, $attrName) {
    #{$attrKey}: typed($typeName, $attrName);
}

//复用匹配组件(混入=函数)
@mixin matchComponent($typeKey) {
    @each $comKey, $comValue in $components {
        .kl-#{$comKey}--#{$typeKey} {
            @content;
        }
    }
}

:root {
    //type类型判断
    @each $typeKey, $typeValue in $buttonType {
        @include matchComponent($typeKey) {
            // box-sizing: border-box;
            //button
            @include kl-attribute($typeValue, '--kl-bg-color', 'kl-bg');
            @include kl-attribute($typeValue, '--kl-font-color', 'kl-fontColor');
            @include kl-attribute($typeValue, '--kl-border', 'kl-border');
        }
    }

    // 写一个具体的例子就好理解了
    /* typeKey=primary  typeName=typeValue=kl-bg: $primary-bgColor  

    .kl-button-primary{
         border-radius: 5px;
        --kl-bg-color: $primary-bgColor        //由kl-bg在typeName里找到kl-bg，所以返回值是$primary-bgColor
        --kl-font-color: $primary-fontColor  
        --kl-border: $primary-border 

    }
    
    */

    //size
    @each $sizeKey, $sizeValue in $sizeStyle {
        @include matchComponent($sizeKey) {
            @include kl-attribute($sizeValue, '--kl-size-width', 'kl-width');
            @include kl-attribute($sizeValue, '--kl-size-height', 'kl-height');
            @include kl-attribute($sizeValue, '--kl-size-font', 'kl-fontSize');
            @include kl-attribute($sizeValue, '--kl-size-padding', 'kl-paddingSize');
        }
    }

    //message
    @each $key, $value in $messageType {
        @include matchComponent($key) {
            @include kl-attribute($value, '--bg-color', 'bg');
            @include kl-attribute($value, '--font-color', 'fontColor');
        }
    }
}
