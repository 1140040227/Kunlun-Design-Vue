@import './typeStyle.scss';
@import './size.scss';

$components: button, input, select;

@function typed($type, $key) {
    @return map-get($type, $key);
}

@mixin kl-attribute($typeName, $attrKey, $attrName) {
    #{$attrKey}: typed($typeName, $attrName);
}

//复用匹配组件
@mixin matchComponent($typeKey) {
    @each $comKey, $comValue in $components {
        .kl-#{$comKey}--#{$typeKey} {
            @content;
        }
    }
}

:root {
    //type类型判断
    @each $typeKey, $typeValue in $typeStyle {
        @include matchComponent($typeKey) {
            @include kl-attribute($typeValue, 'background-color', 'kl-bg');
            @include kl-attribute($typeValue, 'color', 'kl-font-color');
            @include kl-attribute($typeValue, 'border', 'kl-border');
            box-sizing: border-box;
            border-radius: 5px;
        }
    }

    //size
    @each $sizeKey, $sizeValue in $sizeStyle {
        @include matchComponent($sizeKey) {
            @include kl-attribute($sizeValue, 'padding', 'kl-paddingSize');
            @include kl-attribute($sizeValue, 'font-size', 'kl-fontSize');
        }
    }
}
