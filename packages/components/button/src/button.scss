@import '../../styles/common.scss';

.kl-button {
    outline: none;
    cursor: pointer;
    border: $border-none;
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    min-width: $normal-width;
    min-height: $normal-height;
    font-size: 16px;
    user-select: none;

    & + & {
        margin-left: 12px;
    }

    // transition
    transition: all $transition-quick;

    //circle
    &.kl-circle {
        border-radius: 50%;
        padding: 15px;
        min-width: 20px;
        height: 20px;
    }

    //round
    &.kl-round {
        border-radius: 20px;
    }
}

$defaultHoverBgColor: null;

@each $key, $value in $typeStyle {
    @if $key == 'primary' {
        $defaultHoverBgColor: map-get(
            $map: $value,
            $key: 'kl-bg'
        );
    }
}

//只有使用了type的才能正确使用plain
//遍历type找到当前匹配的类型
@each $key, $value in $typeStyle {
    .kl-button--#{$key} {
        &.kl-plain {
            //如果是默认类型，不进行设置
            @if $key == 'default' {
                &:hover,
                &:active {
                    border: 1px solid $defaultHoverBgColor;
                    color: $defaultHoverBgColor;
                    background-color: $default-bgColor;
                }
                &:focus {
                    border: 1px solid $defaultHoverBgColor;
                    color: $defaultHoverBgColor;
                    background-color: $default-bgColor;
                }
            } @else {
                //给背景颜色设置透明度
                background-color: rgba($color: map-get($map: $value, $key: 'kl-bg'), $alpha: 0.1);
                //给字体设置当前type主题色
                @include kl-attribute($value, 'color', 'kl-bg');
                //增加边框
                border: 1px solid map-get($map: $value, $key: 'kl-bg');

                &:hover {
                    opacity: 1 !important;
                    background-color: rgba($color: map-get($map: $value, $key: 'kl-bg'), $alpha: 1);
                    @include kl-attribute($value, 'color', 'kl-fontColor');
                }
                &:focus {
                    background-color: rgba($color: map-get($map: $value, $key: 'kl-bg'), $alpha: 1);
                    color: $font-color-white;
                }
                &:active {
                    opacity: 1 !important;
                    @include kl-attribute($value, 'background-color', 'kl-bg-active');
                }
            }
        }

        @if $key == 'default' {
            &:hover {
                border: 1px solid $defaultHoverBgColor;
                color: $defaultHoverBgColor;
                background-color: rgba($color: $defaultHoverBgColor, $alpha: 0.1);
            }
            &:focus {
                border: 1px solid $defaultHoverBgColor;
                color: $defaultHoverBgColor;
                background-color: rgba($color: $defaultHoverBgColor, $alpha: 0.1);
            }
            &:active {
                border: 2px solid $defaultHoverBgColor;
            }
        } @else {
            &:hover {
                opacity: 0.6;
            }

            //激活样式
            &:active {
                opacity: 1 !important;
                @include kl-attribute($value, 'background-color', 'kl-bg-active');
            }
        }
    }
}
