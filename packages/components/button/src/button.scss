@import '../../styles/common.scss';

.kl-button {
    outline: none;
    cursor: pointer;
    border: $border-none;
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    width: var(--kl-size-width); //设置段落的最小宽度
    height: var(--kl-size-height); //设置段落的最小高度
    font-size: var(--kl-size-font);
    padding: 0 10px;
    user-select: none;
    background-color: var(--kl-bg-color);
    color: var(--kl-font-color);
    border: var(--kl-border);
    border-radius: 5px;
    .icon {
        font-size: 16px;
    }

    & + & {
        margin-left: 12px;
    }

    // transition
    transition: all $transition-quick;

    //circle
    &.kl-circle {
        width: 2.5em;
        border-radius: 50%;
        padding: 8px;
        aspect-ratio: 1/1;
    }

    //round
    &.kl-round {
        border-radius: 20px;
    }

    //disabled
    &.kl-disabled {
        cursor: not-allowed;
        opacity: 0.6;
    }
}

$defaultHoverBgColor: null;

@each $key, $value in $buttonType {
    @if $key == 'primary' {
        $defaultHoverBgColor: map-get(
            $map: $value,
            $key: 'kl-bg'
        );
    }
}

//只有使用了type的才能正确使用plain
//遍历type找到当前匹配的类型

:root {
    @each $key, $value in $buttonType {
        .kl-button--#{$key} {
            @if $key == 'default' {
                //当button 的 type 为 default 或者没有设置的时候
                //鼠标悬浮效果
                &:hover {
                    &:not(.kl-disabled, .kl-link, .kl-text) {
                        --kl-border-color: #{rgba($color: $defaultHoverBgColor, $alpha: 0.5)};
                        --kl-border: var(--kl-border-width)
                            var(--kl-border-style)
                            var(--kl-border-color);
                        --kl-font-color: #{$defaultHoverBgColor};
                        --kl-bg-color: #{rgba($color: $defaultHoverBgColor, $alpha: 0.1)};
                    }
                }

                //聚焦效果
                &:focus {
                    &:not(.kl-disabled, .kl-link, .kl-text) {
                        --kl-border-color: #{rgba($color: $defaultHoverBgColor, $alpha: 0.5)};
                        --kl-border: var(--kl-border-width)
                            var(--kl-border-style)
                            var(--kl-border-color);
                        --kl-font-color: #{$defaultHoverBgColor};
                        --kl-bg-color: #{rgba($color: $defaultHoverBgColor, $alpha: 0.1)};
                    }
                }

                //激活效果
                &:active {
                    &:not(.kl-disabled, .kl-link, .kl-text) {
                        --kl-border-color: #{rgba($color: $defaultHoverBgColor, $alpha: 1)};
                    }

                    &:not(.kl-disabled, .kl-text) {
                        opacity: 1 !important;
                    }
                }
            } @else {
                &:hover:not(.kl-disabled, .kl-link, .kl-text),
                &:focus:not(.kl-disabled, .kl-link, .kl-text) {
                    opacity: 0.6;
                }

                //激活样式
                &:active {
                    &:not(.kl-disabled, .kl-link, .kl-text) {
                        opacity: 1 !important;
                        @include kl-attribute($value, '--kl-bg-color', 'kl-bg-active');
                    }
                }
            }

            &.kl-plain {
                //如果是默认类型，不进行设置
                @if $key == 'default' {
                    &:hover:not(.kl-disabled, .kl-link, .kl-text),
                    &:active:not(.kl-disabled, .kl-link, .kl-text) {
                        --kl-border-color: #{$defaultHoverBgColor};
                        --kl-font-color: #{$defaultHoverBgColor};
                        --kl-bg-color: #{$default-bgColor};
                    }

                    &:focus:not(.kl-disabled, .kl-link, .kl-text) {
                        --kl-border-color: #{$defaultHoverBgColor};
                        --kl-font-color: #{$defaultHoverBgColor};
                        --kl-bg-color: #{$default-bgColor};
                    }
                } @else {
                    //给背景颜色设置透明度
                    --kl-bg-color: #{rgba(
                            $color: map-get($map: $value, $key: 'kl-bg'),
                            $alpha: 0.1
                        )};
                    //给字体设置当前type主题色
                    @include kl-attribute($value, '--kl-font-color', 'kl-bg');
                    //增加边框
                    --kl-border-color: #{map-get($map: $value, $key: 'kl-bg')};
                    --kl-border: var(--kl-border-width)
                        var(--kl-border-style)
                        var(--kl-border-color);

                    &:hover:not(.kl-disabled, .kl-link, .kl-text) {
                        opacity: 1 !important;
                        --kl-bg-color: #{rgba(
                                $color: map-get($map: $value, $key: 'kl-bg'),
                                $alpha: 1
                            )};
                        @include kl-attribute($value, '--kl-font-color', 'kl-fontColor');
                    }

                    &:focus:not(.kl-disabled, .kl-link, .kl-text) {
                        opacity: 1;
                        --kl-font-color: white;
                        --kl-bg-color: #{rgba(
                                $color: map-get($map: $value, $key: 'kl-bg'),
                                $alpha: 1
                            )};
                    }

                    &:active:not(.kl-disabled, .kl-link, .kl-text) {
                        opacity: 1 !important;
                        @include kl-attribute($value, '--kl-bg-color', 'kl-bg-active');
                        --kl-border-color: #{map-get($map: $value, $key: 'kl-bg-active')};
                    }
                }
            }

            //link
            //链接按钮样式 不需要背景颜色 default 和其他 type 稍微有一些区别
            &.kl-link {
                --kl-bg-color: transparent;
                border: none;

                &:not(.kl-disabled) {
                    cursor: auto;
                }

                span {
                    color: var(--kl-font-color);

                    @if $key == 'default' {
                        @include kl-attribute($value, '--kl-font-color', 'kl-fontColor');
                    } @else {
                        @include kl-attribute($value, '--kl-font-color', 'kl-bg');
                    }
                }

                &:not(.kl-disabled) span {
                    cursor: pointer;

                    &:hover,
                    &:focus {
                        opacity: 0.6;
                    }

                    &:active {
                        opacity: 1 !important;

                        @if $key == 'default' {
                            --kl-font-color: black;
                        } @else {
                            @include kl-attribute($value, '--kl-font-color', 'kl-bg-active');
                        }
                    }
                }
            }

            //文本按钮
            &.kl-text {
                --kl-bg-color: transparent;
                border: none;

                &:hover:not(.kl-disabled),
                &:focus:not(.kl-disabled) {
                    --kl-bg-color: rgb(233, 236, 243);
                }

                &:active:not(.kl-disabled) {
                    --kl-bg-color: rgb(198, 203, 210);
                }

                @if $key == 'default' {
                    @include kl-attribute($value, '--kl-font-color', 'kl-fontColor');
                } @else {
                    @include kl-attribute($value, '--kl-font-color', 'kl-bg');
                }

                //背景
                //bg
                &.kl-bg {
                    border: none;
                    --kl-bg-color: rgb(233, 236, 243);

                    &:hover:not(.kl-disabled),
                    &:focus:not(.kl-disabled) {
                        --kl-bg-color: rgb(220, 222, 226);
                    }

                    &:active:not(.kl-disabled) {
                        --kl-bg-color: rgb(198, 203, 210);
                    }
                }
            }
        }
    }
}
